
list.files("diet_data")


andy <- read.csv("diet_data/Andy.csv")
head(andy)

length(andy$Day)
dim(andy)
str(andy)
summary(andy)
names(andy)

andy[1, "Weight"]
andy[30, "Weight"]
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[,"Day"] == 30), "Weight"]
subset(andy$Weight, andy$Day==30)


files <- list.files("diet_data")
files

files[1]
files[2]
files[3:5]


head(read.csv(files[3]))
Woah, what happened? 
Well, John.csv is sitting inside the diet_data folder. We just tried to run the equivalent of read.csv("John.csv") and R correctly told us that there isn't a file called John.csv in our working directory. 
To fix this, we need to append the directory to the beginning of the file name.

files_full <- list.files("diet_data", full.names=TRUE)
files_full

head(read.csv(files_full[3]))


andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tail(andy_david)


To understand what's happening in a loop, let's try something:

for (i in 1:5) {print(i)}
As you can see, for each pass through the loop, i increases by 1 from 1 through 5. Let's apply that concept to our list of files.

for (i in 1:5) {
        dat <- rbind(dat, read.csv(files_full[i]))
}
Whoops. 
Object 'dat' not found. This is because you can't rbind something into a file that doesn't exist yet. So let's create an empty data frame called 'dat' before running the loop.

dat <- data.frame()
for (i in 1:5) {
        dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)


median(dat$Weight)
NA? Why did that happen? Type 'dat' into the console and you'll see a print out of all 150 obversations. Scroll back up to row 77, and you'll see that we have some missing data from John, which is recorded as NA by R.

We need to get rid of those NA's for the purposes of calculating the median. There are several approaches. For instance, we could subset the data using complete.cases() or is.na(). But if you look at ?median, you'll see there is an argument called na.rm that will strip the NA values out for us.

median(dat$Weight, na.rm=TRUE)

dat_30 <- dat[which(dat[, "Day"] == 30),]
dat_30
median(dat_30$Weight)


We've done a lot of manual data manipulation so far. Let's build a function that will return the median weight of a given day.

Let's start out by defining what the arguments of the function should be. These are the parameters that the user will define. The first parameter the user will need to define is the directory that is holding the data. The second parameter they need to define is the day for which they want to calculate the median.

So our function is going to start out something like this:

weightmedian <- function(directory, day) { # content of the function }

So what goes in the content? Let's think through it logically. We need a data frame with all of the data from the CSV's. We'll then subset that data frame using the argument day and take the median of that subset.

In order to get all of the data into a single data frame, we can use the method we worked through earlier using list.files() and rbind().

Essentially, these are all things that we've done in this example. Now we just need to combine them into a single function.

So what does the function look like?

weightmedian <- function(directory, day)  {
        files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
        dat <- data.frame()                             #creates an empty data frame
        for (i in 1:5) {                                
                #loops through the files, rbinding them together 
                dat <- rbind(dat, read.csv(files_list[i]))
        }
        dat_subset <- dat[which(dat[, "Day"] == day),]  #subsets the rows that match the 'day' argument
        median(dat_subset[, "Weight"], na.rm=TRUE)      #identifies the median weight 
                                                        #while stripping out the NAs
}

